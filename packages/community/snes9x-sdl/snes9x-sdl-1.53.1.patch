diff --git a/sdl/configure.ac b/sdl/configure.ac
index 670ea05..779c276 100644
--- a/sdl/configure.ac
+++ b/sdl/configure.ac
@@ -4,7 +4,7 @@ AC_REVISION([$Revision: 1.53 $])
 
 AC_CONFIG_SRCDIR([sdlmain.cpp])
 
-AC_CANONICAL_TARGET
+AC_CANONICAL_HOST
 
 AC_PROG_CC
 AC_PROG_CXX
@@ -38,7 +38,7 @@ AC_DEFUN([AC_S9X_COMPILER_FLAG],
 				return (argc);
 			}
 		],
-		[snes9x_cv_option_$2="yes"], [snes9x_cv_option_$2="no"])
+		[snes9x_cv_option_$2="yes"], [snes9x_cv_option_$2="no"], [snes9x_cv_option_$2="yes"])
 	])
 
 	CXXFLAGS="[$]OLD_CXXFLAGS"
@@ -154,9 +154,10 @@ AC_ARG_ENABLE([gzip],
 	[], [enable_gzip="yes"])
 
 if test "x$enable_gzip" = "xyes"; then
+	PKG_CHECK_MODULES([ZLIB], [zlib])
 	if test "x$snes9x_cv_zlib" = "xyes"; then
-		S9XDEFS="$S9XDEFS -DZLIB"
-		S9XLIBS="$S9XLIBS -lz"
+		S9XDEFS="$S9XDEFS ${ZLIB_CFLAGS} -DZLIB"
+		S9XLIBS="$S9XLIBS ${ZLIB_LIBS}"
 	else
 		AC_MSG_WARN([zlib not found. Build without GZIP support.])
 		enable_gzip="no"
@@ -214,9 +215,10 @@ AC_ARG_ENABLE([screenshot],
 	[], [enable_screenshot="yes"])
 
 if test "x$enable_screenshot" = "xyes"; then
+	PKG_CHECK_MODULES([PNG], [libpng])
 	if test "x$snes9x_cv_libpng" = "xyes"; then
-		S9XDEFS="$S9XDEFS -DHAVE_LIBPNG"
-		S9XLIBS="$S9XLIBS -lpng"
+		S9XDEFS="$S9XDEFS ${PNG_CFLAGS} -DHAVE_LIBPNG"
+		S9XLIBS="$S9XLIBS ${PNG_LIBS}"
 	else
 		AC_MSG_WARN([libpng not found. Build without screenshot support.])
 		enable_screenshot="no"
@@ -240,8 +242,9 @@ AC_CACHE_VAL([snes9x_cv_sdl],
 ])
 
 if test "x$snes9x_cv_sdl" = "xyes"; then
-  	S9XFLGS="$S9XFLGS `sdl-config --cflags`"
-	S9XLIBS="$S9XLIBS `sdl-config --libs`"
+	PKG_CHECK_MODULES([SDL], [sdl])
+  	S9XFLGS="$S9XFLGS ${SDL_CFLAGS}"
+	S9XLIBS="$S9XLIBS ${SDL_LIBS}"
 else
 	AC_MSG_ERROR([SDL is required.])
 fi
@@ -332,7 +335,7 @@ AC_DEFUN([AC_S9X_CHECK_SAR],
 			return (i < 0 ? 0 : 1);
 		}
 	],
-	[snes9x_sar_$1="yes"], [snes9x_sar_$1="no"])
+	[snes9x_sar_$1="yes"], [snes9x_sar_$1="no"], [snes9x_sar_$1=$GCC])
 
 	CXXFLAGS="[$]OLD_CXXFLAGS"
 
diff --git a/sdl/sdlinput.cpp b/sdl/sdlinput.cpp
index 156d392..c682e33 100644
--- a/sdl/sdlinput.cpp
+++ b/sdl/sdlinput.cpp
@@ -246,19 +246,18 @@ void S9xParseInputConfig (ConfigFile &conf, int pass)
 	keymaps.clear();
 	if (!conf.GetBool("Unix::ClearAllControls", false))
 	{
-		// Using 'Joypad# Axis'
+		// Hardcoded Pad Config
 		keymaps.push_back(strpair_t("J00:Axis0",      "Joypad1 Axis Left/Right T=50%"));
 		keymaps.push_back(strpair_t("J00:Axis1",      "Joypad1 Axis Up/Down T=50%"));
-
-		keymaps.push_back(strpair_t("J00:B0",         "Joypad1 X"));
+		keymaps.push_back(strpair_t("J00:B2",         "Joypad1 X"));
 		keymaps.push_back(strpair_t("J00:B1",         "Joypad1 A"));
-		keymaps.push_back(strpair_t("J00:B2",         "Joypad1 B"));
+		keymaps.push_back(strpair_t("J00:B0",         "Joypad1 B"));
 		keymaps.push_back(strpair_t("J00:B3",         "Joypad1 Y"));
+		keymaps.push_back(strpair_t("J00:B4",         "Joypad1 L"));
+		keymaps.push_back(strpair_t("J00:B5",         "Joypad1 R"));
+		keymaps.push_back(strpair_t("J00:B9",         "Joypad1 Select"));
+		keymaps.push_back(strpair_t("J00:B8",        "Joypad1 Start"));
 
-		keymaps.push_back(strpair_t("J00:B6",         "Joypad1 L"));
-		keymaps.push_back(strpair_t("J00:B7",         "Joypad1 R"));
-		keymaps.push_back(strpair_t("J00:B8",         "Joypad1 Select"));
-		keymaps.push_back(strpair_t("J00:B11",        "Joypad1 Start"));
 		keymaps.push_back(strpair_t("K00:SDLK_RIGHT",        "Joypad1 Right"));
 		keymaps.push_back(strpair_t("K00:SDLK_LEFT",         "Joypad1 Left"));
 		keymaps.push_back(strpair_t("K00:SDLK_DOWN",         "Joypad1 Down"));
@@ -350,22 +349,43 @@ void S9xProcessEvents (bool8 block)
 			}
 			break;
 
-/***** Joystick starts *****/
-#if 0
 		case SDL_JOYBUTTONDOWN:
 		case SDL_JOYBUTTONUP:
 			S9xReportButton(0x80000000 | // joystick button
-					(event.jbutton.which << 24) | // joystick index
-					event.jbutton.button, // joystick button code
-					event.type == SDL_JOYBUTTONDOWN); // press or release
+                                        (event.jbutton.which << 24) | // joystick index
+                                        event.jbutton.button, // joystick button code
+                                        event.type == SDL_JOYBUTTONDOWN); // press or release
 			break;
-
+		
 		case SDL_JOYAXISMOTION:
 			S9xReportAxis(0x80008000 | // joystick axis
 				      (event.jaxis.which << 24) | // joystick index
 				      event.jaxis.axis, // joystick axis
 				      event.jaxis.value); // axis value
 			break;
+
+ 		case SDL_JOYHATMOTION:
+                        switch (event.jhat.value) {
+                        case SDL_HAT_UP:
+                                printf ("SDL_HAT_UP\n");
+				//SDLK_RIGHT
+                                break;
+                        case SDL_HAT_DOWN:
+                                printf ("SDL_HAT_DOWN\n");
+                                break;
+                        case SDL_HAT_LEFT:
+                                printf ("SDL_HAT_LEFT\n");
+                                break;
+                        case SDL_HAT_RIGHT:
+                                printf ("SDL_HAT_RIGHT\n");
+                                break;
+                        }
+			break;
+
+
+/***** Joystick starts *****/
+#if 0
+
 #endif
 /***** Joystick ends *****/
 
